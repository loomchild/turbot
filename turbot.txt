TODO: raise bug with scroll back/forward button


Intro ---------------------------------

Wasn't sure what to show you since Turbo is still evolving, best practices are developing.


Code tour -----------------------------

Model, data seed, Controller, routes, index, show, paging.
Using latest turbo-rails, released last week.

Disable Turbo -------------------------

Turbo.session.drive = false

Paging.
Show individual pages.

Enable it back.
Not too bad? - disable it back.


MAYBE FIX SCROLL HERE?


New feature: search box -----------------------------

def index
...
    @query = params[:query]
    @events = @events.where('title LIKE :query OR subtitle LIKE :query OR abstract LIKE :query OR speakers LIKE :query', { query: "%#{@query}%" }) if @query

<div>
  <%= form_with url: events_path, method: :get do |form| %>
    <%= form.text_field :query, placeholder: 'Filter events', autocomplete: 'off', value: @query %>
  <% end %>
</div>

Remember to press enter

Problems:
- product feedback - I want search-as-you-type
- loses focus, especially bad if you like to do search as you type (ADD ONINPUT NOW?)
- scrolls to the top


Frames -------------------------


Permanent ----------------------

-> enable turbo: doesn't help.

<div id="search" data-turbo-permanent>
  <%= form_with url: events_path, method: :get do |form| %>
    <%= form.text_field :query, placeholder: 'Filter events', autocomplete: 'off', oninput: "this.form.requestSubmit()", value: @query %>
  <% end %>
</div>

works, but still loses focus


Scrolling fix -------------------

<% content_for :head do %>
  <meta name="turbo-refresh-scroll" content="preserve">
<% end %>

Breaks back button scroll -> to be discussed



Morph -------------------------

  <meta name="turbo-refresh-method" content="morph">


  def create
    session[:query] = params[:query]

    redirect_to events_path
  end








Extras -----------------------------

Turbo.setProgressBarDelay(1)






When to throttle? -> all the time? only at the beginning? at the end too?
Show what is being sent and how it works.


Intro:
Using TailwindCSS

Scroll
Small thingey to add stuff to HEAD. (really needed - only for scrolling)

Scroll per app (so simpler)?

Maybe separate page for no-turbo, turbo, version with fames? no..


Turbo: The speed of a single-page web application without having to write any JavaScript 

1. Build an app that displays events.
2. Enable turbo - benefits: faster, no need to update HEAD (although cached)
3. Add search box. Show that it loses focus on search
4b. Add extra content above and below? Or maybe invert and first explain frames?
5. Frame
4. Permanent.
4b. Scroll but requires scroll? => problems with it
6. Morph?


Github repo of this project.

References:
1. Official docs
2. https://www.hotrails.dev
3. Official Morphing: https://dev.37signals.com/a-happier-happy-path-in-turbo-with-morphing/
4. Martians


Load fosdem events all for searching 2023. Also needs descriptions.
Show what travels over the wire.


For server-side demo: enable GPRS throttling.
Also shows the navigation icon.

END:
- hope you found it intriguing
- part 2 possible with more advanced features, such as streaming / broadcasting updates

I want to show that:
- it's fast (search, maybe over the server show too?)
- it's easy (no JS at all ideal)
- it's powerful

Not some general way of building applications.

Turbo:
Drive
Frames?
Streams??

Some slides too:
There's no cleint side:
- state
- router

Maybe show how form submit happens, that button is switched to disabled.
422 thingy or 303 (show it in action)

Frames as a trick for browser edit is not a good idea it seems -> the main reasons for frames are caching, parallization => not sure if worthy. They also generally shouldn't change URL if I understand correctly.

How it works:
- intercepts link clicks and form submits (show in browser)
- replaces body keeps the head (already a benefit)

animation.
popover?

Frames allow you to replace just part of the page
- how to show it? => example with paging and search?
- show some errors if not matching frame

But wait, there's more: morph 
- merged last week 
- how to best show it, where it shines? -> multiple distinct regions. => broadcast no...
--> only with refresh visit (what does it mean?) -> when turbo renders the same page again
--> actually mostly for scroll position?
--> benefits: focus, text selection, scroll + broadcasting action as an alternative to sending individual stream updates (before, after, etc.) => maybe here shine an example?

Turbo refresh scroll works on its own, without morph. When page URL changes it's not morph.
Morph only on replace and when URL didn't change or when from cache



Central question for the future: decide what is server-side and what is client side. 

IDEA: input.isDirty could be taken into account when morphing
isDirty obtained by comparing value and defaultValue.

Hypothesis about frames / streams:
- state should be stored on the server, so:
  - forms should be generated there and show with JS
  - or they should be generated based on server state: e.g. params, session 
  	- perhaps even some specialized store only for this path, or try with flash?
OH shit:
- form value is replacing with old on morph.
- js-based show will also be replaced in morph.

Goal of the talk is to teach.
Present turbo, try to avoid streams and frames. 

Perhaps modals example? (search)




IDEA: show with Turbo 8 disabled, and discover what problems we will hit.

Maybe a demo at the end with other uses:
- search
- navigating table while graph above is visible

Autocomplete for Tailwind doesn't work.	
Maybe no tailwind and just CSS, since it lacks even basic styling and can be confsing -> but then ugly.

App idea:
table
with paging
search

Prepare seed in advance (cheat)
Everything else from scratch or is it too much?
Use resources generator

Pagination: simple
How to do search? Simple by name
Maybe add some more props, like speaker.

Alpha order.
Next-Prev at the bottom

Maybe add this BO first, to train with it?

bonus: JS to 


Practical Introduction to Turbo
from zero to hero

IDEAS:
- Table with paging and search
	- small, even pagination is already nice
	- people can relate to this stuff
	- search more complicated
	- input is not deleting => nice
	- scroll show by adding more elements on the page: morph shines; maybe even set the second setting separately.

- Graph with transitions?
	- or maybe Graph above a table show to see how interactive it is? (<= good idea)

- Some CRUD -> try to modify https://www.hotrails.dev? 
	- similar to the tutorial online, but with 8?
	- will still require frames, perhaps good?
	- trick with IDs for each element to morph to work when adding? dom_id can be used?
	- maybe multi-edit will work if I have frames everywhere
	- multi-edit on array is a weird use case, better present it as multiple distinct fields edit.
